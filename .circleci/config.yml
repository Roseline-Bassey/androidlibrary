version: 2.1


config_docker: &config_docker
  docker:
    - image: cimg/android:2021.10.2
  resource_class: large
  working_directory:  ~/code

config_env: &config_env
  environment:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
    JAVA_TOOL_OPTIONS: "-Xmx4096m -XX:+UseParallelGC"
    GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.workers.max=2 -Dkotlin.incremental=true -Dkotlin.compiler.execution.strategy=in-process"
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      yes | sdkmanager --licenses || true
      sdkmanager "platform-tools" "platforms;android-31"
restore_cache: &restore_cache
  restore_cache:
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

fix_permissions: &fix_permissions
  run:
    name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    command: sudo chmod +x ./gradlew

update_dependencies: &update_dependencies
  run:
    name: Download Dependencies
    command: ./gradlew dependencies

update_cache: &update_cache
  save_cache:
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


jobs:
  job_run_tests:
    <<: *config_docker
    <<: *config_env
    steps:
      - <<: *update_sdk
      - checkout
      # Docker caching is not available in free plans
      - <<: *cache_docker
      - <<: *restore_cache
      - <<: *fix_permissions
      - <<: *update_dependencies
      - <<: *update_cache
      - run:
          name: Run Tests
          command: ./gradlew testDebug
      - run:
          name: Save test results (html page, see Artifacts)
          command: |
            mkdir -p test-results/html/
            find . -type d -regex ".*/*reports/tests" -exec cp -avr {} test-results/html/ \;
          when: always
      - run:
          name: Save test results (xml results, see Tests)
          command: |
            mkdir -p test-results/xml/
            find . -type f -regex ".*/*test-results/.*xml" -exec cp {} test-results/xml/ \;
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: reports/

workflows:
  version: 2

  # run tests on every commits to master
  run-tests-only:
    jobs:
      - job_run_tests
