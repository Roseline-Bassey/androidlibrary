jobs:
  build:
    docker:
      - image: cimg/android:2023.02
     steps:
      - checkout 
    working_directory: ~/code

config_env: &config_env
  environment:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
    JAVA_TOOL_OPTIONS: "-Xmx4096m -XX:+UseParallelGC"
    GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.workers.max=2 -Dkotlin.incremental=true -Dkotlin.compiler.execution.strategy=in-process"
    TERM: dumb
    
update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      yes | sdkmanager --licenses || true
      sdkmanager "platform-tools" "platforms;android-31"
      
 
      
restore_cache: &restore_cache
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
          
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
          
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
          
update_cache: &update_cache
       save_cache:
         paths:
         - ~/.gradle/caches
         - ~/.gradle/wrapper
       key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}    
         
jobs:
  job_run_tests:
    
      - run:
          name: Run Tests
          command: ./gradlew testDebug
      - run:
          name: Save test results (html page, see Artifacts)
          command: |
            mkdir -p test-results/html/
            find . -type d -regex ".*/*reports/tests" -exec cp -avr {} test-results/html/ \;
          when: always
      - run:
          name: Save test results (xml results, see Tests)
          command: |
            mkdir -p test-results/xml/
            find . -type f -regex ".*/*test-results/.*xml" -exec cp {} test-results/xml/ \;
          when: always
          
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results



      





